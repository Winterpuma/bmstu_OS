Привет!

  Собственно, сабж кому-то еще может пригодиться :)
  Так что ловите:

----------------------------------------------------------------------
Билет 2
1) Классификация операционных систем.
2) Тупики. Стратегия Ханвендера недопущения тупиковых ситуаций.
3) А) Задача об обедающих философах - прокомментируйте
Procedure typical_philosophers
        Begin
                While true do
                Begin
                        Think_any_time
                        Take both_fork_at_once
                        Eat_some_time
                        Place_both_fork_at_once
                End
       end
б) Защита от повторной загрузки резидентной программы

Билет 3
1)   Основы  проектирования  ОС.  Иерархическая  машина:  декомпозиция
системы на уровни. Виртуальная машина. Понятие процесса, потока.
2)  Прерывания: классификация, механизм реализации прерываний.
3)  Структура резидентной программы. Как оставить программу резидентно
в памяти?

Билет 4
1)  Процессы  в  ОС.  Диаграмма  состояний  процесса.  Планирование  и
диспетчеризация
2) Тупиковые ситуации. 4 условия возникновения тупиков. Графы повторно
используемых ресурсов. Обнаружение тупиков методом редукции графа.
3)  Обеспечение  монопольного  доступа  к  разделяемым данным в задаче
"писатели-читатели" используя Win32 API

Билет 5
1)  Уровни  планирования  процессов  в  ОС. Диспетчеризация. Алгоритмы
планирования: классификация.
2) Синхронизация процессов в мноопроцессных ОС. Семафоры: определение,
виды, примеры.
3) Режимы работы процессора Intel Pentium. Таблицы GDT и LDT.

Билет 6
1)      Прерывания: классификация, управление прерываниями в по
2)      
3)      Защищенный режим. Расширенная память (XMS, линия A20)

Билет 7
1)  Система  прерываний.  Механизм  прерывания (сохранение контекста).
Организация ввода-вывода.
2)  Распределение  памяти  сегментами  по запросам: организация таблиц
сегментов.
3) Практика написания резидентных программ на языке C

Билет 8
1) Классификация структур ядер ОС. Три состояния процесса при передаче
сообщений.
2)  Распределение  памяти страницами по запросам: алгоритмы вытеснения
страни (анализ)
3)      Unix: команды fork(), exec(), wait()

Билет 9
1)      Особенности микроядерной архитектуры ОС
2)      Сегментно-страничное распределение памяти по запросам.
3)      Unix: программные каналы, разделяемая память, очереди сообщений

Билет 10
1) Распределение физической памяти: алгоритмы
2)  Процессы  взаимоисключения  -  программная и аппаратная реализация
(команда test-and-set)
3) Резидентные программы. Выгрузка резидентной программы из памяти.

Билет 13
1) Управление памятью. Виртуальная память
2)    Взаимоисключение:    семафоры    -    определение,   организация
взаимоисключения  с  помощью  семафоров,  передача сообщений с помощью
семафоров
3) Тупики
Предположим,  что  все  ресурсы  идентичны.  Они могут приобретаться и
освобождаться  строго  по  одному.  При  этом  процессам  не требуется
ресурсов  больше  чем  имеется в системе. Сможет ли возникнуть тупик в
каждой из следующих систем?
Число процессов Число ресурсов
1       1
1       2
2       2
3       3
        
Билет 14
1)  Средства  взаимодествия  процессов:  мониторы - монитор "кольцевой
буфер"
2) Виртуальная память: анализ страничного поведения процессов, рабочее
множество.
3) Тупики.
Предположим,  что  все  ресурсы  идентичны.  Они могут приобретаться и
освобождаться  строго  по  одному.  При  этом  процессам  не требуется
ресурсов  более  двух  единиц  ресурса.  Сможет  ли возникнуть тупик в
каждой из следующих систем?
Число процессов Число ресурсов
1       2
2       2
2       3
3       3
3       4

Билет 15
1)  Многопроцессные  системы:  взаимодействие процессов, синхронизация
процессов в системах с общей памятью.
2)  Виртуальная  память: три схемы реализации, особенности реализации,
достоинства и недостатки
3) Резидентные программы: точки входа, флаг активности DOS

Билет 16
1)  Процессы.  Синхронизация  процессов  в  системах  с распределенной
памятью.   Проблема   тупиков  в  системах  с  распределенной  памятью
(потребляемые ресурсы)
2)    Сегментно-страничное    распределение    памяти   по   запросам.
Исключительные ситуации.
3)  Спецификация XM (XMS). Conventional, HMA, UMA

Билет 17
1)  Тупики:  проблема  возникновения тупиков - повторно используемые и
потребляемые ресурсы, особенности возникновения тупиковых ситуаций для
потребляемых ресурсов
2)  Классификация  структур  ядер  ОС.  Особенности  монолитного ядра.
Система прерываний.
3)   Unix   процессы  "сироты",  "зомби",  "демоны"  -  возникновение,
особенности работы ОС с каждым типом процессов
----------------------------------------------------------------------

Best regards,
 Nikita Kostylev.                         

Moscow, 
Monday, January 12, 2004 18:18

----------------------------------
Nikita Kostylev
